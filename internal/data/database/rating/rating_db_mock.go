// Code generated by MockGen. DO NOT EDIT.
// Source: ../internal/data/database/rating/rating_db.go

// Package rating is a generated GoMock package.
package rating

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIRatingDb is a mock of IRatingDb interface.
type MockIRatingDb struct {
	ctrl     *gomock.Controller
	recorder *MockIRatingDbMockRecorder
}

// MockIRatingDbMockRecorder is the mock recorder for MockIRatingDb.
type MockIRatingDbMockRecorder struct {
	mock *MockIRatingDb
}

// NewMockIRatingDb creates a new mock instance.
func NewMockIRatingDb(ctrl *gomock.Controller) *MockIRatingDb {
	mock := &MockIRatingDb{ctrl: ctrl}
	mock.recorder = &MockIRatingDbMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIRatingDb) EXPECT() *MockIRatingDbMockRecorder {
	return m.recorder
}

// AddRate mocks base method.
func (m *MockIRatingDb) AddRate(ch chan *AddRatingResponse, model *AddRatingModel) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "AddRate", ch, model)
}

// AddRate indicates an expected call of AddRate.
func (mr *MockIRatingDbMockRecorder) AddRate(ch, model interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddRate", reflect.TypeOf((*MockIRatingDb)(nil).AddRate), ch, model)
}

// GetAllRate mocks base method.
func (m *MockIRatingDb) GetAllRate(ch chan *GetAllRatingsResponse, model *GetAllRatingsModel) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "GetAllRate", ch, model)
}

// GetAllRate indicates an expected call of GetAllRate.
func (mr *MockIRatingDbMockRecorder) GetAllRate(ch, model interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllRate", reflect.TypeOf((*MockIRatingDb)(nil).GetAllRate), ch, model)
}
